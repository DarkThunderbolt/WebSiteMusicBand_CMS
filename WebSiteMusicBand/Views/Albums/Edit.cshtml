@model WebSiteMusicBand.Model.Album

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string link = Model.CoverLink.Substring(1);
}

<!-- The Modal -->
<div id="myModal" class="modal textCenter">
    <!-- Modal content -->
    <div class="modal-content">
        <div class="modal-header">
            <span class="close">&times;</span>
            <h2>
            <span id="nameOfTrack"></span>
            </h2>
        </div>
        <div class="modal-body">
            <form id="trackUploadForm" enctype = "multipart/form-data">
                <input id="trackUploadFile" type="file" name="file" accept=".mp3,audio/*" />
                <button id="btnUploadTrack"> Upload</button>
            </form>
        </div>
    </div>
</div>


<h2  id="center-text">Edit Album:</h2>

@using (Html.BeginForm("Edit", "Albums", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken() 
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.AlbumId)

    <div id="inputFields" class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumOfTracks, htmlAttributes: new { @id = "longText", @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumOfTracks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumOfTracks, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="textCenter">
            <label for="file">Upload Image:</label>
            <input id="fileUpload" type="file" name="file" accept="image/x-png,image/gif,image/jpeg" />
            <div id="imgPreview"></div>
            <button id="resetCover" type="button" >Reset Cover</button>
            <br />
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<hr />
<table id="jsGrid"></table>
<hr />
<div>
    @Html.Partial("~/Views/Albums/MusicPlayerBar.cshtml", Model)
</div>

@section Styles{
    @Styles.Render("~/bundles/jsgrid/css")
    @Styles.Render("~/bundles/soundmanager/css")
    @Styles.Render("~/bundles/modalwindow/css")
    <style>
        #center-text {
            text-align: center;
        }

        #inputFields {
            text-align: left;
            width: 60%;
            display: block;
            margin-left: auto;
            margin-right: auto;
        }

        #longText {
            padding-left: 0px;
            padding-right: 0px;
        }

        #fileUpload {
            margin-left: 20%;
        }

        #thumb-image {
            width: auto;
            height: 300px;
        }
    </style>
}

@section Scripts{
    @Scripts.Render("~/bundles/picpreview");
    @Scripts.Render("~/bundles/jsgrid/js"); 
    @Scripts.Render("~/bundles/soundmanager/js")
    @Scripts.Render("~/bundles/uploadtrack");
    
    <script type="text/javascript">

        var link = "@Html.Raw(HttpUtility.JavaScriptStringEncode(link))";
        var image_holder = $("#imgPreview");
        image_holder.empty();
        $("<img />", {
            "src": "/" +link,
            "id": "thumb-image"
        }).appendTo(image_holder);

        //////////////////////////////////////////////////
        var trackId;

        var alb = @Model.AlbumId;
        $("#jsGrid").jsGrid({

            height: "auto",
            width: "100%",

            inserting: true,
            editing: true,
            autoload: true,

            pageSize: 10,
            pageButtonCount: 5,

            deleteConfirm: "Do you really want to delete client?",

            controller: {
                loadData: function (filter) {
                    return $.ajax({
                        type: "GET",
                        url: "/api/Tracks",
                        data: 'albumId=' + alb,
                        dataType: "json"
                    });
                },

                insertItem: function (item) {
                    return $.ajax({
                        type: "POST",
                        url: "/api/Tracks/" + alb,
                        data: item,
                        dataType: "json"
                    });
                },

                updateItem: function (item) {
                    return $.ajax({
                        type: "PUT",
                        url: "/api/Tracks/",
                        data:'track=' + item,
                        dataType: "json"
                    });
                },

                deleteItem: function (item) {
                    return $.ajax({
                        type: "DELETE",
                        url: "/api/Tracks/" + item.TrackId,
                        dataType: "json"
                    });
                }
            },

            fields: [
                { name: "Position", type: "number", width: 40, title: "№" },
                { name: "NameOfTrack", type: "text", width: 150 },
                { name: "TrackLink", type: "text" },
                {                    
                     itemTemplate: function (_, item) {
                         return $("<button id=trackUploadFile>").text("Upload Track")
                             .on("click", function () {
                                 uploadTrack(item);
                             });
                     }
                 },
                 {
                     width: 35,
                        itemTemplate: function (_, item) {
                            if (item.DoesTrackFileExists) {
                                return $("<button>").text("Play")
                                    .on("click", function () {
                                        soundManager.stopAll();
                                        window.sm2BarPlayers[0].actions.play(item.GridPosition);
                                    });
                            }
                            else {
                                return $("<div>").text("track not found");
                            }
                        }
                    },
                { type: "control", width: 50 }
            ]
        });
        $("#jsGrid").jsGrid("fieldOption", "NameOfTrack", "align", "center");




    </script>
}
