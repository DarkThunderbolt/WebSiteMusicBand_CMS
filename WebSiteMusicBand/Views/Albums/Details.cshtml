@model WebSiteMusicBand.Model.Album

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int albID = Model.AlbumId;
    Dictionary<int, int> positionKey_idValue = new Dictionary<int, int>();
}

<h2>Details</h2>

<div>
    <h4>Album</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Year)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Year)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NumOfTracks)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NumOfTracks)
        </dd>

        <dd>
            <img class="img-responsive user-photo myImg" src=@Url.Content(Model.CoverLink) />
        </dd>

    </dl>

    <br/>
    </div>

    @if (SecureCustomHelper.IsCurrenAdmin())
    {
        <div class="btn btn-default myRight">
            @Html.ActionLink("Edit", "Edit", new { id = Model.AlbumId })
        </div>
        <div class="btn btn-default myRight">
            @Html.ActionLink("Delete", "Delete", new { id = Model.AlbumId })
        </div>
    }




    <div class="btn btn-default" style="float:left">
        @Html.ActionLink("Back", "")
    </div>
<br/>

<table id="jsGrid"></table>




<div class="sm2-bar-ui full-width fixed">

    <div class="bd sm2-main-controls">

        <div class="sm2-inline-texture"></div>
        <div class="sm2-inline-gradient"></div>

        <div class="sm2-inline-element sm2-button-element">
            <div class="sm2-button-bd">
                <a href="#play" class="sm2-inline-button sm2-icon-play-pause">Play / pause</a>
            </div>
        </div>

        <div class="sm2-inline-element sm2-inline-status">

            <div class="sm2-playlist">
                <div class="sm2-playlist-target">
                    <noscript><p>JavaScript is required.</p></noscript>
                </div>
            </div>

            <div class="sm2-progress">
                <div class="sm2-row">
                    <div class="sm2-inline-time">0:00</div>
                    <div class="sm2-progress-bd">
                        <div class="sm2-progress-track">
                            <div class="sm2-progress-bar"></div>
                            <div class="sm2-progress-ball"><div class="icon-overlay"></div></div>
                        </div>
                    </div>
                    <div class="sm2-inline-duration">0:00</div>
                </div>
            </div>

        </div>

        <div class="sm2-inline-element sm2-button-element sm2-volume">
            <div class="sm2-button-bd">
                <span class="sm2-inline-button sm2-volume-control volume-shade"></span>
                <a href="#volume" class="sm2-inline-button sm2-volume-control">volume</a>
            </div>
        </div>


        <div class="sm2-inline-element sm2-button-element">
            <div class="sm2-button-bd">
                <a href="#repeat" title="Repeat playlist" class="sm2-inline-button sm2-icon-repeat">&infin; repeat</a>
            </div>
        </div>

    </div>

    <div class="bd sm2-playlist-drawer sm2-element">

        <div class="sm2-inline-texture">
            <div class="sm2-box-shadow"></div>
        </div>

        <!-- playlist content is mirrored here -->

        <div class="sm2-playlist-wrapper">

            <ul class="sm2-playlist-bd">
                @if (Model.Tracks.Count != 0)
                {
                    int count = 0;
                    foreach (Track item in Model.Tracks)
                    {
                        if (item.TrackLink != null)
                        {
                            positionKey_idValue.Add(count++, item.TrackId);
                            <li>
                                <div class="sm2-row">
                                    <div class="sm2-col sm2-wide">
                                        <a id="songLink" href="@item.TrackLink.Replace("~","")"><div id="songName"> @item.NameOfTrack</div></a>
                                    </div>

                                </div>
                            </li>
                        }
                    }
                }

                <!-- item with "download" link -->
                

            </ul>

        </div>

    </div>

</div>





@*<div>
@Html.Partial("~/Views/Albums/MusicPlayerBar.cshtml", Model)
</div>*@

@section Styles{
    <link type="text/css" rel="stylesheet" href="~/Scripts/jsgrid/jsgrid.min.css" />
    <link type="text/css" rel="stylesheet" href="~/Scripts/jsgrid/jsgrid-theme.min.css" />
    <link type="text/css" rel="stylesheet" href="~/Content/CSS/soundmanager/bar-ui.css" />
   

        .sm2-bar-ui {
     font-size: 16px;
    }
    .sm2-bar-ui .sm2-main-controls,
    .sm2-bar-ui .sm2-playlist-drawer {
     background-color: #c0c0c0;
    }
    .sm2-bar-ui .sm2-inline-texture {
     background: #666;
    }
    }

@section Scripts{

    <script src="~/Scripts/jquery-3.1.1.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jsgrid/jsgrid.min.js" type="text/javascript"></script>
    <script src="~/Scripts/soundmanager/soundmanager2.js" type="text/javascript"></script>
    <script src="~/Scripts/soundmanager/bar-ui.js"></script>

    <script type="text/javascript">
        var alb = @albID;
        $("#jsGrid").jsGrid({

            height: "auto",
            width: "100%",

            inserting: true,
            editing: true,
            autoload: true,

            pageSize: 10,
            pageButtonCount: 5,

            deleteConfirm: "Do you really want to delete client?",

            controller: {
                loadData: function (filter) {
                    return $.ajax({
                        type: "GET",
                        url: "/api/tracks",
                        data: 'albumId=' + alb,
                        dataType: "json"
                    });
                },

                insertItem: function (item) {
                    return $.ajax({
                        type: "POST",
                        url: "/api/Tracks/" + alb,
                        data: item,
                        dataType: "json"
                    });
                },

                updateItem: function (item) {
                    return $.ajax({
                        type: "PUT",
                        url: "/api/Tracks/",
                        data: item,
                        dataType: "json"
                    });
                },

                deleteItem: function (item) {
                    return $.ajax({
                        type: "DELETE",
                        url: "/api/Tracks/" + item.TrackId,
                        dataType: "json"
                    });
                }
            },

            fields: [
                { name: "AlbumId", type: "number"},
                { name: "TrackId", type: "number"},
                { name: "Position", type: "number", width: 25, title: "№" },
                { name: "NameOfTrack", type: "text", width: 150 },
                { name: "TrackLink", type: "text", width: 150 },               
                {
                        itemTemplate: function (_, item) {
                            return $("<button>").text("Play")
                                .on("click", function () {
                                soundManager.stopAll();
                                window.sm2BarPlayers[0].actions.play(item.Position);
                            });
                        }
                    },
                { type: "control", width: 50 }
            ]
        });
        $("#jsGrid").jsGrid("fieldOption", "AlbumId", "visible", false);
        $("#jsGrid").jsGrid("fieldOption", "TrackId", "visible", false);
        $("#jsGrid").jsGrid("fieldOption", "NameOfTrack", "align", "center");
    </script>
}

