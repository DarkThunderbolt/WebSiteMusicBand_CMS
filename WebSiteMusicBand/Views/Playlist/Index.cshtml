
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 id="center-text"> Your playlists:</h2>

<table id="jsGrid_Playlists"></table>
<h2 id="center-text"><a id="playlistName"></a></h2>
<table class="hideTable" id="jsGrid_Tracks"></table>

<div>
    @Html.Partial("~/Views/Albums/MusicPlayerBar.cshtml")
</div>

@section Styles{
    @Styles.Render("~/bundles/jsgrid/css")
    @Styles.Render("~/bundles/soundmanager/css")
    @Styles.Render("~/bundles/modalwindow/css")
    @Styles.Render("~/bundles/dropdownmenu/css")
    <style>
        .hideTable {
            display: none;
        }

    </style>
}

@section Scripts{
    @Scripts.Render("~/bundles/jsgrid/js");
    @Scripts.Render("~/bundles/soundmanager/js")

    <script type="text/javascript">

        var selectedPlaylistId;
        var userId = @SecureCustomHelper.GetCurrentUserId();
        var selectedTrackId;
        var elements = [];
        var button;

        function createPlaylistGrid() {
            $("#jsGrid_Playlists").jsGrid({
                height: "auto",
                width: "100%",
                inserting: true,
                editing: true,
                autoload: true,
                deleteConfirm: "Do you really want to delete this palylist?",

                controller: {
                    loadData: function (filter) {
                        return $.ajax({
                            type: "GET",
                            url: "/api/PlaylistAjax/" + userId,
                            dataType: "json",
                            success: function (data) {
                                if (data.length != 0) {
                                    $.each(data, function (i, item) {
                                        var linkToAdd = $("<a>").attr('name', item.PlaylistId).text(item.Title).addClass('addToPlaylist');
                                        elements.push(linkToAdd);
                                    });

                                    var divs = $("<div>").addClass("dropdown-content").append(elements);
                                    button = $("<button>").addClass("dropbtn").text("Add to:").append(divs);
                                    $('body').on('click', 'a.addToPlaylist', function () {
                                        $.ajax({
                                            type: "PUT",
                                            url: "/api/PlaylistTracksAjax/" + selectedTrackId + "?oldPlaylistId=" + selectedPlaylistId + "&newPlaylistId=" + $(this).attr('name'),
                                            success: function (success) {
                                                if (success) {
                                                    // +
                                                    $("#jsGrid_Tracks").jsGrid("loadData");
                                                    alert("moved")
                                                } else {
                                                    // -
                                                    alert("smt was wrong. Try again later.")
                                                    alert(response.responseText);
                                                }
                                            }
                                        });
                                    });
                                        


                                    $('body').on('click', 'button.dropbtn', function () {
                                        closeDrop();
                                        selectedTrackId = $(this).attr('name');
                                        $(this).find(".dropdown-content").toggleClass("show");
                                    });

                                    // Close the dropdown menu if the user clicks outside of it
                                    window.onclick = function (event) {
                                        if (!event.target.matches('.dropbtn')) {
                                            closeDrop();
                                        };
                                    };
                                }
                            }
                        });
                    },

                    // create
                    insertItem: function (item) {
                        return $.ajax({
                            type: "POST",
                            url: "/api/PlaylistAjax/",
                            data: item,
                            dataType: "json",
                            success: function (result) {
                                $("#jsGrid").jsGrid("loadData");
                            },
                        });
                    },

                    // edit
                    updateItem: function (item) {
                            return $.ajax({
                                type: "PUT",
                                url: "/api/PlaylistAjax/",
                                data: { playlistId: item.PlaylistId, position: item.Position, title: item.Title, userId: item.UserId },
                                processData: true,
                                dataType: "json"
                            });
                    },

                    // delete
                    deleteItem: function (item) {
                        return $.ajax({
                            type: "DELETE",
                            url: "/api/PlaylistAjax/" + item.PlaylistId,
                            dataType: "json"
                        });
                    }
                },

                rowClick: function (args) {
                    if (args.item.Title == "Favorites")
                        args.item.editing = false;
                    else
                        this.editItem(args.item);
                },

                fields: [
                    { name: "Position", type: "number", width: 50, title: "№" },
                    {
                        name: "Title", type: "text", width: 150,
                        validate: {
                            message: "You cant rename default playlist",
                            validator: function (item, value) {
                                if (value.Title !== "Favorites") {
                                    return value;
                                }
                            },
                        }
                    },
                    {
                        width: 35,
                        itemTemplate: function (_, item) {
                            return $("<button>").text("Open").addClass("dropbtn")
                                .on("click", function () {
                                    selectedPlaylistId = item.PlaylistId;
                                    $("#jsGrid_Tracks").removeClass("hideTable");
                                    $("#playlistName").text("Tracks from playlist: " + item.Title);
                                    $("#jsGrid_Tracks").jsGrid("loadData");
                                });
                        },
                    },
                    { type: "control", width: 50 }
                ]
            });
            $("#jsGrid_Playlists").jsGrid("fieldOption", "Title", "align", "center");
            $("#jsGrid_Playlists").jsGrid("fieldOption", "Position", "align", "center");
        }

        /////////////////////////////////////////////
        function createTracksGrid() {            
            $("#jsGrid_Tracks").jsGrid({
                height: "auto",
                width: "100%",
                inserting: false,
                editing: false,
                autoload: false,

                controller: {
                    loadData: function (filter) {
                        return $.ajax({
                            type: "GET",
                            url: "/api/PlaylistTracksAjax/" + selectedPlaylistId,
                            dataType: "json"
                        });
                    },
                },

                onDataLoaded: function (args) {
                    CreateMusicArray(args.data);
                },

                fields: [
                    { name: "NameOfTrack", type: "text", width: 150, title: "Title" },
                    { name: "AlbumTitle", type: "text", width: 70, title: "Album" },
                    { name: "Duration", type: "text", width: 50 },
                    {
                        name: "Play", width: 50,
                        itemTemplate: function (_, item) {
                            if (item.DoesTrackFileExists) {
                                return $("<button>").text("Play").addClass("dropbtn")
                                    .on("click", function () {
                                        soundManager.stopAll();
                                        window.sm2BarPlayers[0].actions.play(item.GridPosition);
                                    });
                            }
                            else {
                                return $("<div>").text("track not found").css("fontSize", "10px");
                            }
                        }
                    },
                    {
                        name: "Move",
                        width: 50,
                        itemTemplate: function (_, item) {
                            return button.clone().attr("name", item.TrackId);
                        },
                    },
                    {
                        name: "Delete",
                        width: 50,
                        itemTemplate: function (_, item) {
                            return $("<button>").text("Remove").addClass("dropbtn")
                                .on("click", function () {
                                    $.ajax({
                                        type: "DELETE",
                                        url: "/api/PlaylistTracksAjax/" + item.TrackId + "?playlistId="+ selectedPlaylistId,
                                        dataType: "json",
                                        success: function (success) {
                                            if (success) {
                                                // +
                                                $("#jsGrid_Tracks").jsGrid("loadData");
                                            } else {
                                                // -
                                                alert("smt was wrong. Try again later.");
                                            }
                                        }
                                    });
                                });
                        },

                    },
                    {
                        width: 50,
                        itemTemplate: function (_, item) {
                            if (item.DoesTrackFileExists) {
                                return $("<a>").text("Download").attr("href", "/Albums/Download?file=" + item.TrackLink);
                            }
                            else {
                                return "";
                            }
                        }
                    }
                ]
            });
            
        }
        /////////////////////////////////////////////////////
        function closeDrop() {
            var dropdowns = document.getElementsByClassName("dropdown-content");
            var i;
            for (i = 0; i < dropdowns.length; i++) {
                var openDropdown = dropdowns[i];
                if (openDropdown.classList.contains('show')) {
                    openDropdown.classList.remove('show');
                }
            }
        }

        createPlaylistGrid();
        createTracksGrid();

    </script>
}
